generate_code has an additional parameter: PushToStack; if true, the code NEEDS the values in the stack
global variable currentDepth
temporary registers: $t0-$t9, $f0-$f15 except $f12
permanent registers: $s0-$s7, $f16-$f31

list of such nodes, with contents : register name, valid, depth, value, offset; if offset is 0, it is a constant

in identifier::generate_code, check if already mapped to a register. if not, map a register node to this "stack offset".
when exiting a function; invalidate all register nodes with currentDepth as depth

when evaluating an expression, put that into a temporary register and put that in that ast
if no register available, store to stack and set that as offset in the ast_node

string













==============================================================================================================================

add a priority of children and whether_assign_present to the node; to be determined while computing the reqreg

for each block{
	call f(block, l)
}

f(node,l) {
	if(node need not be checked) f(each child, l) and return
	if (node.reqreg <= l) return;

	if (child1 priority) {
		if (child1.reqreg > l) {
			set child1.storeneeded = 1
			set child1.reqreg = 0
		}
		if (child2.reqreg > l-1) {
			set child2.storeneeded = 1
			set child2.reqreg = 0
		}
	} else {
		if (child2.reqreg > l) {
			set child2.storeneeded = 1
			set child2.reqreg = 0
		}
		if (child1.reqreg > l-1) {
			set child1.storeneeded = 1
			set child1.reqreg = 0
		}
	}

	// update node.reqreg
}
